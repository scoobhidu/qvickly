// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/delivery/order/detail": {
            "get": {
                "description": "Retrieve comprehensive order details for a delivery partner including items, customer info, and earnings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Delivery Partners"
                ],
                "summary": "Get detailed order information for delivery partner",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"1\"",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "example": "\"de111111-2222-3333-4444-555555555555\"",
                        "description": "Delivery Partner UUID",
                        "name": "delivery_partner_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detailed order information",
                        "schema": {
                            "$ref": "#/definitions/delivery.OrderDetailResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid order ID, missing parameters, or invalid UUID format",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Order not assigned to this delivery partner",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Order not found or delivery partner not found",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/delivery/orders/recent": {
            "get": {
                "description": "Retrieve recent orders assigned to a delivery partner with status and earnings information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Delivery Partners"
                ],
                "summary": "Get recent orders for delivery partner",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "example": "\"de111111-2222-3333-4444-555555555555\"",
                        "description": "Delivery Partner UUID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 20,
                        "description": "Number of recent orders to fetch (default: 20, max: 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"completed\"",
                        "description": "Filter by order status (pending, accepted, packed, ready, completed, cancelled, rejected)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "example": false,
                        "description": "Include detailed order information",
                        "name": "detailed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of recent orders",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/delivery.RecentOrderResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid UUID format, missing ID parameter, or invalid limit",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Delivery partner not found",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/delivery/profile/details": {
            "get": {
                "description": "Retrieve detailed profile information for a delivery partner by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Delivery Partners"
                ],
                "summary": "Get delivery partner profile details",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "example": "\"de111111-2222-3333-4444-555555555555\"",
                        "description": "Delivery Partner UUID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delivery partner profile details",
                        "schema": {
                            "$ref": "#/definitions/delivery.DeliveryProfileDetailsSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID format or missing ID parameter",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Delivery partner not found",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/delivery/profile/orders/summary": {
            "get": {
                "description": "Retrieve orders summary including completed orders, earnings, and active orders for a delivery partner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Delivery Partners"
                ],
                "summary": "Get delivery partner orders summary",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "example": "\"de111111-2222-3333-4444-555555555555\"",
                        "description": "Delivery Partner UUID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "example": false,
                        "description": "Include detailed order lists",
                        "name": "detailed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Basic orders summary",
                        "schema": {
                            "$ref": "#/definitions/delivery.OrdersSummaryResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID format or missing ID parameter",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Delivery partner not found",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/delivery/update_location": {
            "post": {
                "description": "Update the current GPS location of a delivery partner and set them online",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Delivery Partners"
                ],
                "summary": "Update delivery partner location",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "example": "\"de111111-2222-3333-4444-555555555555\"",
                        "description": "Delivery Partner UUID",
                        "name": "delivery_partner_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "GPS coordinates",
                        "name": "location",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.UpdateLocationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/delivery/verify_pickup": {
            "post": {
                "description": "Verify that delivery partner has picked up order from vendor using vendor-provided PIN and update order status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Delivery Partners"
                ],
                "summary": "Verify order pickup from vendor using PIN",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"123\"",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "example": "\"de111111-2222-3333-4444-555555555555\"",
                        "description": "Delivery Partner UUID",
                        "name": "delivery_boy_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Pickup PIN provided by vendor",
                        "name": "pin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.VerifyPickupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pickup verified successfully and order status updated",
                        "schema": {
                            "$ref": "#/definitions/delivery.VerifyPickupResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters, missing PIN, or wrong PIN",
                        "schema": {
                            "$ref": "#/definitions/delivery.PickupErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Order not assigned to this delivery partner or invalid status transition",
                        "schema": {
                            "$ref": "#/definitions/delivery.PickupErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "$ref": "#/definitions/delivery.PickupErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Order already picked up or invalid status for pickup",
                        "schema": {
                            "$ref": "#/definitions/delivery.PickupErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.PickupErrorResponse"
                        }
                    }
                }
            }
        },
        "/otp/sms": {
            "post": {
                "description": "Send a one-time password (OTP) to the provided phone number via SMS using Twilio Verify service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Send OTP via SMS",
                "parameters": [
                    {
                        "description": "Phone number request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/send_otp.Request"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/otp/whatsapp": {
            "post": {
                "description": "Send a one-time password (OTP) to the provided phone number via WhatsApp using Twilio Verify service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Send OTP via WhatsApp",
                "parameters": [
                    {
                        "description": "Phone number request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/send_otp.Request"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/vendor/categories": {
            "get": {
                "description": "Retrieve all available product categories for filtering and organization purposes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Get All Categories",
                "responses": {}
            }
        },
        "/vendor/inventory/search": {
            "post": {
                "description": "Search for items that vendors can add to their inventory with various filtering options",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Items"
                ],
                "summary": "Search items with advanced filters",
                "parameters": [
                    {
                        "description": "Search filters, if 0 then that means all category IDs",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vendors.SearchFilters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful search results",
                        "schema": {
                            "$ref": "#/definitions/vendors.SearchResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/vendors.SearchResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/vendors.SearchResponse"
                        }
                    }
                }
            }
        },
        "/vendor/orders/order_details": {
            "get": {
                "description": "Retrieve comprehensive details about a specific order including delivery information, customer details, and all items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Get Vendor Order Details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order details retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/vendors.OrderDetailsResponse"
                        }
                    }
                }
            }
        },
        "/vendor/orders/recent_orders": {
            "get": {
                "description": "Retrieve a paginated list of orders for a specific vendor. Maximum 10 orders per page to ensure optimal performance.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Get Vendor Orders List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vendor ID",
                        "name": "vendor_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page (default: 10, max: 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Orders retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/vendors.OrdersListResponse"
                        }
                    }
                }
            }
        },
        "/vendor/orders/summary": {
            "get": {
                "description": "Retrieve order count statistics for the current day, grouped by order status. Provides a quick overview of vendor's daily order performance.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order-analytics"
                ],
                "summary": "Get Vendor Today's Order Summary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vendor ID",
                        "name": "vendor_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Today's order summary retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/vendors.TodayOrderSummary"
                        }
                    }
                }
            }
        },
        "/vendor/orders/update_order_status": {
            "post": {
                "description": "Update the status of an order to track its progress through the fulfillment pipeline. Status changes help coordinate between vendors, delivery partners, and customers.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Update Order Status",
                "parameters": [
                    {
                        "description": "Order status update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/update_order_status.UpdateOrderStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order status updated successfully",
                        "schema": {
                            "$ref": "#/definitions/update_order_status.UpdateOrderStatusResponse"
                        }
                    }
                }
            }
        },
        "/vendor/profile/details": {
            "post": {
                "description": "Retrieve complete profile information for a specific vendor including business details, location, and operating hours",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vendor-profile"
                ],
                "summary": "Get Vendor Profile Details",
                "parameters": [
                    {
                        "description": "Complete vendor profile information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vendors.GetVendorProfileRequestBody"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/vendor/profile/details/create": {
            "post": {
                "description": "Create a new vendor profile with complete business information, location details, and operating hours",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vendor-profile"
                ],
                "summary": "Create Vendor Profile",
                "parameters": [
                    {
                        "description": "Complete vendor profile information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vendors.CompleteVendorProfile"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/vendor/{vendor_id}/inventory": {
            "get": {
                "description": "Retrieve paginated inventory items for a specific vendor with filtering and search capabilities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Get Vendor Inventory Items",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vendor ID",
                        "name": "vendor_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page (default: 20, max: 50)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by category ID",
                        "name": "category_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search items by name or description",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter items by stock status",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {}
            },
            "post": {
                "description": "Add a new item from the master catalog to the vendor's inventory with initial stock quantity and optional price override",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Add Item to Vendor Inventory",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vendor ID",
                        "name": "vendor_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Add item to inventory request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vendors.AddItemToInventoryRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/vendor/{vendor_id}/inventory/summary": {
            "get": {
                "description": "Retrieve summary statistics of vendor's inventory including total items, in-stock items, and out-of-stock items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Get Vendor Inventory Summary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vendor ID",
                        "name": "vendor_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inventory summary retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/vendors.InventorySummary"
                        }
                    }
                }
            }
        },
        "/vendor/{vendor_id}/inventory/{item_id}": {
            "put": {
                "description": "Update stock quantity, availability status, or price override for an existing inventory item. All fields are optional - only provide fields you want to update.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Update Inventory Item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vendor ID",
                        "name": "vendor_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Item ID to update",
                        "name": "item_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Inventory update request (all fields optional)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vendors.UpdateInventoryRequest"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "description": "Permanently remove an item from the vendor's inventory. This action cannot be undone. The item will no longer be available for sale.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Remove Item from Vendor Inventory",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vendor ID",
                        "name": "vendor_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Item ID to remove from inventory",
                        "name": "item_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/verify-otp": {
            "post": {
                "description": "Verify the OTP code sent via SMS or WhatsApp, create user account if new, and return JWT access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Verify OTP and Authenticate User",
                "parameters": [
                    {
                        "description": "OTP verification request containing phone number and code",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/verify_otp.Request"
                        }
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "delivery.DeliveryPartnerProfile": {
            "type": "object",
            "properties": {
                "aadhar_card_image_url": {
                    "type": "string"
                },
                "aadhar_card_number": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "driving_license_number": {
                    "type": "string"
                },
                "emergency_contact_name": {
                    "type": "string"
                },
                "emergency_contact_phone": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_location_update": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "online": {
                    "type": "boolean"
                },
                "phone_number": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "total_deliveries": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "upi_id": {
                    "type": "string"
                },
                "vehicle_number": {
                    "type": "string"
                },
                "vehicle_type": {
                    "type": "string"
                }
            }
        },
        "delivery.DeliveryProfileDetailsSuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/delivery.DeliveryPartnerProfile"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "delivery.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "delivery.OrderDetailResponse": {
            "type": "object",
            "properties": {
                "accepted_at": {
                    "type": "string"
                },
                "bonus": {
                    "type": "number"
                },
                "customer_name": {
                    "type": "string"
                },
                "delivered_at": {
                    "type": "string"
                },
                "delivery_address": {
                    "type": "string"
                },
                "delivery_fee": {
                    "type": "number"
                },
                "delivery_instruction": {
                    "type": "string"
                },
                "delivery_latitude": {
                    "type": "number"
                },
                "delivery_longitude": {
                    "type": "number"
                },
                "earning": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/delivery.OrderItemDetail"
                    }
                },
                "items_value": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "store_name": {
                    "type": "string"
                }
            }
        },
        "delivery.OrderItemDetail": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "qty": {
                    "type": "integer"
                }
            }
        },
        "delivery.OrdersSummaryResponse": {
            "type": "object",
            "properties": {
                "active_orders": {
                    "type": "integer"
                },
                "completed": {
                    "type": "integer"
                },
                "earnings": {
                    "type": "number"
                }
            }
        },
        "delivery.PickupErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "current_status": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "order_id": {
                    "type": "integer"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "delivery.RecentOrderResponse": {
            "type": "object",
            "properties": {
                "earnings": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "items": {
                    "type": "integer"
                },
                "last_status_updated_time": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "delivery.UpdateLocationRequest": {
            "type": "object",
            "required": [
                "lat",
                "long"
            ],
            "properties": {
                "lat": {
                    "type": "number",
                    "example": 28.6139391
                },
                "long": {
                    "type": "number",
                    "example": 77.2090212
                }
            }
        },
        "delivery.VerifyPickupRequest": {
            "type": "object",
            "required": [
                "pin"
            ],
            "properties": {
                "pin": {
                    "type": "integer",
                    "example": 1234
                }
            }
        },
        "delivery.VerifyPickupResponse": {
            "type": "object",
            "properties": {
                "customer_name": {
                    "type": "string"
                },
                "delivery_partner": {
                    "type": "string"
                },
                "items_count": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "new_status": {
                    "type": "string"
                },
                "order_id": {
                    "type": "integer"
                },
                "success": {
                    "type": "boolean"
                },
                "vendor_name": {
                    "type": "string"
                },
                "verified_at": {
                    "type": "string"
                }
            }
        },
        "send_otp.Request": {
            "type": "object",
            "required": [
                "phone"
            ],
            "properties": {
                "phone": {
                    "description": "E.164 format: +1234567890",
                    "type": "string",
                    "example": "+918010201921"
                }
            }
        },
        "update_order_status.UpdateOrderStatusRequest": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "update_order_status.UpdateOrderStatusResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "vendors.AddItemToInventoryRequest": {
            "type": "object",
            "required": [
                "item_id",
                "stock_quantity"
            ],
            "properties": {
                "item_id": {
                    "type": "integer",
                    "example": 456
                },
                "stock_quantity": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 50
                }
            }
        },
        "vendors.CategorySummary": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "item_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "vendors.CompleteVendorProfile": {
            "type": "object",
            "properties": {
                "account_type": {
                    "type": "string",
                    "enum": [
                        "basic",
                        "premium",
                        "enterprise"
                    ],
                    "example": "premium"
                },
                "address": {
                    "type": "string",
                    "example": "123 Main Street, Downtown, New York, NY 10001"
                },
                "business_name": {
                    "type": "string",
                    "example": "Smith's Fresh Market LLC"
                },
                "closing_time": {
                    "type": "string",
                    "example": "2000-01-01T21:00:00Z"
                },
                "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john.smith@freshmarket.com"
                },
                "gstin": {
                    "type": "string",
                    "example": "22AAAAA0000A1Z5"
                },
                "image_s3_url": {
                    "type": "string",
                    "example": "https://my-bucket.s3.amazonaws.com/vendors/store-123.jpg"
                },
                "latitude": {
                    "type": "number",
                    "maximum": 90,
                    "minimum": -90,
                    "example": 40.7128
                },
                "live_status": {
                    "type": "boolean",
                    "example": true
                },
                "longitude": {
                    "type": "number",
                    "maximum": 180,
                    "minimum": -180,
                    "example": -74.006
                },
                "opening_time": {
                    "type": "string",
                    "example": "2000-01-01T09:00:00Z"
                },
                "owner_name": {
                    "type": "string",
                    "example": "John Smith"
                },
                "phone": {
                    "type": "string",
                    "example": "+1234567890"
                }
            }
        },
        "vendors.ErrorDetail": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "vendors.GetVendorProfileRequestBody": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "example": "c4a538ea019b7a"
                },
                "phone": {
                    "type": "string",
                    "example": "9876543211"
                }
            }
        },
        "vendors.InventorySummary": {
            "type": "object",
            "properties": {
                "in_stock_items": {
                    "type": "integer",
                    "example": 135
                },
                "out_of_stock_items": {
                    "type": "integer",
                    "example": 15
                },
                "total_items": {
                    "type": "integer",
                    "example": 150
                }
            }
        },
        "vendors.Item": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "category_id": {
                    "type": "integer"
                },
                "category_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_available": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "price_retail": {
                    "type": "number"
                },
                "price_wholesale": {
                    "type": "number"
                },
                "search_keywords": {
                    "type": "string"
                },
                "stock": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "vendor_id": {
                    "type": "string"
                },
                "vendor_name": {
                    "type": "string"
                }
            }
        },
        "vendors.OrderDetailsResponse": {
            "type": "object",
            "properties": {
                "customer_address": {
                    "type": "string",
                    "example": "123 Main St, Apt 4B, New York, NY 10001"
                },
                "customer_name": {
                    "type": "string",
                    "example": "Jane Smith"
                },
                "delivered_by_time": {
                    "type": "string",
                    "example": "2025-05-30T15:00:00Z"
                },
                "delivery_partner_name": {
                    "type": "string",
                    "example": "John Delivery"
                },
                "delivery_partner_phone": {
                    "type": "string",
                    "example": "+1234567890"
                },
                "delivery_partner_pin": {
                    "type": "string",
                    "example": "1234"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vendors.OrderItem"
                    }
                },
                "order_created_time": {
                    "type": "string",
                    "example": "2025-05-30T13:30:00Z"
                },
                "order_id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "order_status": {
                    "type": "string",
                    "enum": [
                        "pending",
                        "accepted",
                        "packed",
                        "ready",
                        "completed",
                        "cancelled",
                        "rejected"
                    ],
                    "example": "packed"
                },
                "order_total_amount": {
                    "type": "number",
                    "example": 45.99
                },
                "pack_by_time": {
                    "type": "string",
                    "example": "2025-05-30T14:30:00Z"
                },
                "paid_by_time": {
                    "type": "string",
                    "example": "2025-05-30T13:45:00Z"
                }
            }
        },
        "vendors.OrderItem": {
            "type": "object",
            "properties": {
                "item_id": {
                    "type": "integer",
                    "example": 1
                },
                "item_image_url": {
                    "type": "string",
                    "example": "https://example.com/images/margherita-pizza.jpg"
                },
                "item_name": {
                    "type": "string",
                    "example": "Margherita Pizza"
                },
                "qty_ordered": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 2
                }
            }
        },
        "vendors.OrderListItem": {
            "type": "object",
            "properties": {
                "customer_name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "delivered_by_time": {
                    "type": "string",
                    "example": "2025-05-30T15:00:00Z"
                },
                "order_id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "order_status": {
                    "type": "string",
                    "enum": [
                        "pending",
                        "accepted",
                        "packed",
                        "ready",
                        "completed",
                        "cancelled",
                        "rejected"
                    ],
                    "example": "packed"
                },
                "order_time_placed": {
                    "type": "string",
                    "example": "2025-05-30T13:30:00Z"
                },
                "pack_by_time": {
                    "type": "string",
                    "example": "2025-05-30T14:30:00Z"
                },
                "pick_by_time": {
                    "type": "string",
                    "example": "2025-05-30T14:45:00Z"
                },
                "total_amount": {
                    "type": "number",
                    "example": 45.99
                }
            }
        },
        "vendors.OrdersListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vendors.OrderListItem"
                    }
                },
                "has_next": {
                    "type": "boolean",
                    "example": true
                },
                "has_prev": {
                    "type": "boolean",
                    "example": false
                },
                "limit": {
                    "type": "integer",
                    "maximum": 10,
                    "minimum": 1,
                    "example": 10
                },
                "page": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 1
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "total_count": {
                    "type": "integer",
                    "example": 125
                },
                "total_pages": {
                    "type": "integer",
                    "example": 13
                }
            }
        },
        "vendors.PaginationInfo": {
            "type": "object",
            "properties": {
                "current_page": {
                    "type": "integer"
                },
                "has_next": {
                    "type": "boolean"
                },
                "has_previous": {
                    "type": "boolean"
                },
                "items_per_page": {
                    "type": "integer"
                },
                "total_items": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "vendors.SearchData": {
            "type": "object",
            "properties": {
                "applied_filters": {
                    "$ref": "#/definitions/vendors.SearchFilters"
                },
                "available_categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vendors.CategorySummary"
                    }
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vendors.Item"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/vendors.PaginationInfo"
                }
            }
        },
        "vendors.SearchFilters": {
            "type": "object",
            "properties": {
                "category_id": {
                    "description": "Filter by category",
                    "type": "integer",
                    "example": 0
                },
                "limit": {
                    "description": "Items per page",
                    "type": "integer",
                    "example": 10
                },
                "page": {
                    "description": "Pagination page number",
                    "type": "integer",
                    "example": 1
                },
                "query": {
                    "description": "Search term for name/description/keywords",
                    "type": "string",
                    "example": "Lay's'"
                }
            }
        },
        "vendors.SearchResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/vendors.SearchData"
                },
                "error": {
                    "$ref": "#/definitions/vendors.ErrorDetail"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "vendors.TodayOrderSummary": {
            "type": "object",
            "properties": {
                "accepted": {
                    "type": "integer",
                    "example": 8
                },
                "cancelled": {
                    "type": "integer",
                    "example": 3
                },
                "completed": {
                    "type": "integer",
                    "example": 45
                },
                "packed": {
                    "type": "integer",
                    "example": 15
                },
                "pending": {
                    "type": "integer",
                    "example": 12
                },
                "ready": {
                    "type": "integer",
                    "example": 6
                },
                "rejected": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "vendors.UpdateInventoryRequest": {
            "type": "object",
            "properties": {
                "is_available": {
                    "type": "boolean",
                    "example": true
                },
                "price_override": {
                    "type": "number",
                    "minimum": 0,
                    "example": 10.99
                },
                "stock_quantity": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 30
                }
            }
        },
        "verify_otp.Request": {
            "type": "object",
            "required": [
                "code",
                "device_info",
                "phone"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "device_info": {
                    "type": "object",
                    "required": [
                        "device_id"
                    ],
                    "properties": {
                        "app_version": {
                            "type": "string"
                        },
                        "device_id": {
                            "type": "string"
                        },
                        "device_type": {
                            "type": "string"
                        },
                        "os_version": {
                            "type": "string"
                        }
                    }
                },
                "phone": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "3.110.183.54",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Qvickly APIs",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
