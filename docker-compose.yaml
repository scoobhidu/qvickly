version: '3.9'

services:
  postgres:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: qvickly_dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - qvickly_network

  redis:
    image: redis:latest
    container_name: redis_cache
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - qvickly_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: qvickly_app
    expose:
      - "8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=qvickly_dev
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - GO_ENV=production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    networks:
      - qvickly_network

  nginx:
    image: nginx:alpine
    container_name: qvickly_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
#      - ./nginx/ssl:/etc/nginx/ssl:ro  # Optional: for SSL certificates
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - qvickly_network

  backup:
    image: postgres:latest
    depends_on:
      - postgres
    volumes:
      - postgres_data:/src/data
      - postgres_backup:/backup
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: qvickly_dev
    command: |
      bash -c 'while true; do
        pg_dump -h postgres -U postgres qvickly_dev > /backup/backup_$$(date +%Y%m%d_%H%M%S).sql;
        sleep 86400;
      done'
    networks:
      - qvickly_network

volumes:
  postgres_data:
  postgres_backup:
  redis_data:

networks:
  qvickly_network:
    driver: bridge